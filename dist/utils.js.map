{"version":3,"sources":["../src/utils.js"],"names":["intervalToMilliseconds","fillDataRow","series","timestamp","value","dataRow","find","i","push","padTimeSeriesAndSortByDate","fromDate","toDate","interval","padWith","intervalInMillis","length","timestampIndex","referenceDate"],"mappings":";;;;;;;;AAAQA,MAAAA,sB,mBAAAA,sB;;;AAEFC,MAAAA,W,GAAc,SAAdA,WAAc,CAACC,MAAD,EAASC,SAAT,EAAoBC,KAApB,EAA8B;AAChD,YAAMC,OAAO,GAAGH,MAAM,CAACI,IAAP,CAAY,UAAAC,CAAC;AAAA,iBAAIA,CAAC,CAAC,CAAD,CAAD,KAASJ,SAAb;AAAA,SAAb,CAAhB;;AACA,YAAIE,OAAO,IAAI,IAAf,EAAqB;AACnBH,UAAAA,MAAM,CAACM,IAAP,CAAY,CAACL,SAAD,EAAYC,KAAZ,CAAZ;AACD;AACF,O;AAED;;;;;;;;;;4CAQaK,0B,GAA6B,SAA7BA,0BAA6B,CAACP,MAAD,EAASQ,QAAT,EAAmBC,MAAnB,EAA2BC,QAA3B,EAAwD;AAAA,YAAnBC,OAAmB,uEAAT,IAAS;AAChG,YAAMC,gBAAgB,GAAGd,sBAAsB,CAACY,QAAD,CAA/C;;AACA,YAAIV,MAAM,IAAI,IAAV,IAAkBA,MAAM,CAACa,MAAP,KAAkB,CAApC,IAAyCD,gBAAgB,GAAG,CAAhE,EAAmE;AACjE,iBAAOZ,MAAP;AACD;;AAED,YAAMc,cAAc,GAAG,CAAvB;AACA,YAAMC,aAAa,GAAGf,MAAM,CAAC,CAAD,CAAN,CAAUc,cAAV,CAAtB;;AACA,aAAK,IAAIb,SAAS,GAAGc,aAArB,EAAoCd,SAAS,GAAGQ,MAAhD,EAAwDR,SAAS,IAAIW,gBAArE,EAAuF;AACrFb,UAAAA,WAAW,CAACC,MAAD,EAASC,SAAT,EAAoBU,OAApB,CAAX;AACD;;AACD,aAAK,IAAIV,UAAS,GAAGc,aAAa,GAAGH,gBAArC,EAAuDX,UAAS,IAAIO,QAApE,EAA8EP,UAAS,IAAIW,gBAA3F,EAA6G;AAC3Gb,UAAAA,WAAW,CAACC,MAAD,EAASC,UAAT,EAAoBU,OAApB,CAAX;AACD;;AACD,eAAOX,MAAP;AACD,O","sourcesContent":["import {intervalToMilliseconds} from './types/intervals';\n\nconst fillDataRow = (series, timestamp, value) => {\n  const dataRow = series.find(i => i[0] === timestamp);\n  if (dataRow == null) {\n    series.push([timestamp, value]);\n  }\n}\n\n/**\n * Add padding to the series where no data is available for given interval.\n * @param {Array<[timestamp: any, value: number]>} series Series that should be null-padded\n * @param {number} fromDate Start date of query as unix timestamp\n * @param {number} toDate End date of query as unix timestamp\n * @param {String} interval The interval used for the query, e.g. SECOND, MINUTE, HOUR, ...\n * @param {any} padWith The value that is used for padding, defaults to null\n */\nexport const padTimeSeriesAndSortByDate = (series, fromDate, toDate, interval, padWith = null) => {\n  const intervalInMillis = intervalToMilliseconds(interval);\n  if (series == null || series.length === 0 || intervalInMillis < 0) {\n    return series;\n  }\n\n  const timestampIndex = 0;\n  const referenceDate = series[0][timestampIndex];\n  for (let timestamp = referenceDate; timestamp < toDate; timestamp += intervalInMillis) {\n    fillDataRow(series, timestamp, padWith);\n  }\n  for (let timestamp = referenceDate - intervalInMillis; timestamp >= fromDate; timestamp -= intervalInMillis) {\n    fillDataRow(series, timestamp, padWith);\n  }\n  return series;\n}"],"file":"utils.js"}