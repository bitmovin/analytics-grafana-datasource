{"version":3,"sources":["../src/licenseService.js"],"names":["LicenseService","requestHandler","baseURL","endpoint","mapperFunction","requestOptions","url","method","doRequest","licensesResponse","status","licenses","data","result","items","item","license","push","allLicenses","licenseEndpoints","mapperFunc","name","licenseKey","id","_fetchLicensesForEndpoint","concat"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAMA,MAAAA,c;;;AAEJ,gCAAYC,cAAZ,EAA4BC,OAA5B,EAAqC;AAAA;;AACnC,eAAKD,cAAL,GAAsBA,cAAtB;AACA,eAAKC,OAAL,GAAeA,OAAf;AACD;;;;;;;qDAE+BC,Q,EAAUC,c;;;;;;;AAClCC,sBAAAA,c,GAAiB;AACrBC,wBAAAA,GAAG,EAAE,KAAKJ,OAAL,GAAeC,QADC;AAErBI,wBAAAA,MAAM,EAAE;AAFa,uB;;6BAKQ,KAAKN,cAAL,CAAoBO,SAApB,CAA8BH,cAA9B,C;;;AAAzBI,sBAAAA,gB;;4BAEFA,gBAAgB,CAACC,MAAjB,KAA4B,G;;;;;wDACvB,E;;;AAGHC,sBAAAA,Q,GAAW,E;;;;;;AACjB,uCAAmBF,gBAAgB,CAACG,IAAjB,CAAsBA,IAAtB,CAA2BC,MAA3B,CAAkCC,KAArD,uHAA4D;AAAjDC,wBAAAA,IAAiD;AACpDC,wBAAAA,OADoD,GAC1CZ,cAAc,CAACW,IAAD,CAD4B;AAE1DJ,wBAAAA,QAAQ,CAACM,IAAT,CAAcD,OAAd;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;wDACML,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIHO,sBAAAA,W,GAAc,E;AAEZC,sBAAAA,gB,GAAmB,CACvB;AACEhB,wBAAAA,QAAQ,EAAE,qBADZ;AAEEiB,wBAAAA,UAAU,EAAE,oBAACL,IAAD;AAAA,mDACPA,IADO;AAEV,qCAASA,IAAI,CAACM,IAAL,GAAYN,IAAI,CAACM,IAAjB,GAAwBN,IAAI,CAACO;AAF5B;AAAA;AAFd,uBADuB,EAQvB;AACEnB,wBAAAA,QAAQ,EAAE,6BADZ;AAEEiB,wBAAAA,UAAU,EAAE,oBAACL,IAAD;AAAA,mDACPA,IADO;AAEV,0CAAcA,IAAI,CAACQ,EAFT;AAGV,qCAASR,IAAI,CAACM,IAAL,GAAYN,IAAI,CAACM,IAAjB,GAAwBN,IAAI,CAACQ;AAH5B;AAAA;AAFd,uBARuB,C;kDAiBNJ,gB;;;;;;;;AAARJ,sBAAAA,I;;;6BAEgB,KAAKS,yBAAL,CAA+BT,IAAI,CAACZ,QAApC,EAA8CY,IAAI,CAACK,UAAnD,C;;;AAAjBT,sBAAAA,Q;AACNO,sBAAAA,WAAW,GAAGA,WAAW,CAACO,MAAZ,CAAmBd,QAAnB,CAAd;;;;;;;;;;;;;;wDAKGO,W;;;;;;;;;;;;;;;;;;;;;AAEV;;yBAEclB,c","sourcesContent":["class LicenseService {\n\n  constructor(requestHandler, baseURL) {\n    this.requestHandler = requestHandler;\n    this.baseURL = baseURL;\n  }\n\n  async _fetchLicensesForEndpoint(endpoint, mapperFunction) {\n    const requestOptions = {\n      url: this.baseURL + endpoint,\n      method: 'GET',\n    };\n\n    const licensesResponse = await this.requestHandler.doRequest(requestOptions);\n\n    if (licensesResponse.status !== 200) {\n      return [];\n    }\n\n    const licenses = [];\n    for (const item of licensesResponse.data.data.result.items) {\n      const license = mapperFunction(item);\n      licenses.push(license);\n    }\n    return licenses;\n  }\n\n  async fetchLicenses() {\n    let allLicenses = [];\n\n    const licenseEndpoints = [\n      {\n        endpoint: '/analytics/licenses',\n        mapperFunc: (item) => ({\n          ...item,\n          'label': item.name ? item.name : item.licenseKey\n        }),\n      },\n      {\n        endpoint: '/analytics/virtual-licenses',\n        mapperFunc: (item) => ({\n          ...item,\n          'licenseKey': item.id,\n          'label': item.name ? item.name : item.id\n        }),\n      },\n    ];\n    for (const item of licenseEndpoints) {\n      try {\n        const licenses = await this._fetchLicensesForEndpoint(item.endpoint, item.mapperFunc);\n        allLicenses = allLicenses.concat(licenses);\n      } catch (e) {\n        // ignore error\n      }\n    }\n    return allLicenses;\n  }\n};\n\nexport default LicenseService;\n"],"file":"licenseService.js"}