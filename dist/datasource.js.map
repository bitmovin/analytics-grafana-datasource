{"version":3,"sources":["../src/datasource.js"],"names":["_","convertFilterValueToProperType","ATTRIBUTE","ATTRIBUTE_LIST","AD_ATTRIBUTE_LIST","METRICS_ATTRIBUTE_LIST","ORDERBY_ATTRIBUTES","getAsOptionsList","AGGREGATION","calculateAutoInterval","getMomentTimeUnitForQueryInterval","QUERY_INTERVAL","transform","ResultFormat","OPERATOR","getApiRequestUrl","baseUrl","isAdAnalytics","isMetric","mapMathOperatorToAnalyticsFilterOperator","operator","EQ","NE","LT","LTE","GT","GTE","BitmovinAnalyticsDatasource","instanceSettings","$q","backendSrv","templateSrv","type","url","jsonData","name","q","withCredentials","headers","apiKey","tenantOrgId","length","basicAuth","options","query","buildQueryParameters","targets","filter","t","hide","when","data","getAdhocFilters","adhocFilters","targetResponsePromises","map","target","resultFormat","TIME_SERIES","interval","HOUR","filters","e","key","value","replace","scopedVars","orderBy","order","licenseKey","license","start","range","from","toISOString","end","to","includes","dimension","urlAppendix","metric","COUNT","LICENSE_KEY","percentileValue","AUTO","intervalMs","valueOf","intervalSnapTo","intervalTimeUnit","startOf","groupBy","forEach","INTERVAL","Number","limit","undefined","apiRequestUrl","doRequest","method","resultTarget","alias","refId","Promise","all","then","targetResponses","result","response","series","getLicenses","status","message","title","resolve","datasourceRequest"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport { convertFilterValueToProperType, ATTRIBUTE, ATTRIBUTE_LIST, AD_ATTRIBUTE_LIST, METRICS_ATTRIBUTE_LIST, ORDERBY_ATTRIBUTES, getAsOptionsList } from './types/queryAttributes';\nimport { AGGREGATION } from './types/aggregations';\nimport { calculateAutoInterval, getMomentTimeUnitForQueryInterval, QUERY_INTERVAL } from './types/intervals';\nimport { transform } from './result_transformer';\nimport { ResultFormat } from './types/resultFormat';\nimport { OPERATOR } from './types/operators';\n\nconst getApiRequestUrl = (baseUrl, isAdAnalytics, isMetric) => {\n  if (isAdAnalytics === true) {\n    return baseUrl + '/analytics/ads/queries';\n  }\n  if (isMetric == true) {\n    return baseUrl + '/analytics/metrics';\n  }\n  return baseUrl + '/analytics/queries';\n};\n\nconst mapMathOperatorToAnalyticsFilterOperator = (operator) => {\n  switch (operator) {\n    case '=':\n      return OPERATOR.EQ;\n    case '!=':\n      return OPERATOR.NE;\n    case '<':\n      return OPERATOR.LT;\n    case '<=':\n      return OPERATOR.LTE;\n    case '>':\n      return OPERATOR.GT;\n    case '>=':\n      return OPERATOR.GTE;\n    default:\n      return operator;\n  }\n};\n\nexport class BitmovinAnalyticsDatasource {\n\n  constructor(instanceSettings, $q, backendSrv, templateSrv) {\n    this.type = instanceSettings.type;\n    this.url = instanceSettings.url;\n    this.isAdAnalytics = instanceSettings.jsonData.isAdAnalytics;\n    this.name = instanceSettings.name;\n    this.q = $q;\n    this.backendSrv = backendSrv;\n    this.templateSrv = templateSrv;\n    this.withCredentials = instanceSettings.withCredentials;\n\n    this.headers = {\n      'Content-Type': 'application/json',\n      'X-Api-Key': instanceSettings.jsonData.apiKey,\n    };\n\n    const tenantOrgId = instanceSettings.jsonData.tenantOrgId;\n    if (typeof tenantOrgId === 'string' && tenantOrgId.length > 0) {\n      this.headers['X-Tenant-Org-Id'] = tenantOrgId;\n    }\n\n    if (typeof instanceSettings.basicAuth === 'string' && instanceSettings.basicAuth.length > 0) {\n      this.headers['Authorization'] = instanceSettings.basicAuth;\n    }\n  }\n\n  query(options) {\n    const query = this.buildQueryParameters(options);\n    query.targets = query.targets.filter(t => !t.hide);\n\n    if (query.targets.length <= 0) {\n      return this.q.when({ data: [] });\n    }\n\n    if (this.templateSrv.getAdhocFilters) {\n      query.adhocFilters = this.templateSrv.getAdhocFilters(this.name);\n    } else {\n      query.adhocFilters = [];\n    }\n\n    const targetResponsePromises = _.map(query.targets, target => {\n      target.resultFormat = target.resultFormat || ResultFormat.TIME_SERIES;\n      target.interval = target.interval || QUERY_INTERVAL.HOUR;\n\n      const filters = _.map([...target.filter, ...query.adhocFilters], e => {\n        let filter = {\n          name: (e.name) ? e.name : e.key,\n          operator: mapMathOperatorToAnalyticsFilterOperator(e.operator),\n          value: this.templateSrv.replace(e.value, options.scopedVars)\n        }\n        return {\n          name: filter.name,\n          operator: filter.operator,\n          value: convertFilterValueToProperType(filter)\n        }\n      });\n      const orderBy = _.map(target.orderBy, e => ({ name: e.name, order: e.order }));\n      const data = {\n        licenseKey: target.license,\n        start: options.range.from.toISOString(),\n        end: options.range.to.toISOString(),\n        filters,\n        orderBy\n      };\n\n      let isMetric = METRICS_ATTRIBUTE_LIST.includes(target.dimension);\n      let urlAppendix = '';\n\n      if (isMetric) {\n        urlAppendix = target.dimension;\n        data['metric'] = target.dimension\n      } else {\n        target.metric = target.metric || AGGREGATION.COUNT;\n        target.dimension = target.dimension || ATTRIBUTE.LICENSE_KEY;\n        urlAppendix = target.metric\n        data['dimension'] = target.dimension;\n\n        if (target.metric === 'percentile') {\n          data['percentile'] = target.percentileValue;\n        }\n      }\n\n      if (target.resultFormat === ResultFormat.TIME_SERIES) {\n        data['interval'] = target.interval;\n        if (target.interval === QUERY_INTERVAL.AUTO) {\n          const intervalMs = options.range.to.valueOf() - options.range.from.valueOf();\n          data['interval'] = calculateAutoInterval(intervalMs);\n        }\n\n        if (target.intervalSnapTo === true) {\n          const intervalTimeUnit = getMomentTimeUnitForQueryInterval(data['interval']);\n          if (intervalTimeUnit != null) {\n            data['start'] = options.range.from.startOf(intervalTimeUnit).toISOString();\n            data['end'] = options.range.to.startOf(intervalTimeUnit).toISOString();\n          }\n        }\n      }\n      data['groupBy'] = target.groupBy;\n      data['orderBy'].forEach(e => {\n        if (e.name == ORDERBY_ATTRIBUTES.INTERVAL) {\n          e.name = data['interval'];\n        }\n      });\n      data['limit'] = Number(target.limit) || undefined;\n      var apiRequestUrl = getApiRequestUrl(this.url, this.isAdAnalytics, isMetric);\n\n      return this.doRequest({\n        url: apiRequestUrl + '/' + urlAppendix,\n        data: data,\n        method: 'POST',\n        resultTarget: target.alias || target.refId,\n        resultFormat: target.resultFormat\n      });\n    });\n\n    return Promise.all(targetResponsePromises).then(targetResponses => {\n      let result = [];\n      _.map(targetResponses, response => {\n        const series = transform(response, options);\n        result = [...result, ...series];\n      });\n      return {\n        data: result\n      };\n    });\n  }\n\n  testDatasource() {\n    return this.getLicenses().then(response => {\n      if (response.status === 200) {\n        return { status: \"success\", message: \"Data source is working\", title: \"Success\" };\n      }\n    });\n  }\n\n  annotationQuery(options) {\n\n  }\n\n  metricFindQuery(query) {\n\n  }\n\n  getTagKeys(options) {\n    if (this.isAdAnalytics) {\n      return Promise.resolve(getAsOptionsList(AD_ATTRIBUTE_LIST));\n    }\n    return Promise.resolve(getAsOptionsList(ATTRIBUTE_LIST));\n  }\n\n  doRequest(options) {\n    options.withCredentials = this.withCredentials;\n    options.headers = this.headers;\n\n    return this.backendSrv.datasourceRequest(options);\n  }\n\n  buildQueryParameters(options) {\n    return options;\n  }\n\n  getLicenses() {\n    return this.doRequest({\n      url: this.url + '/analytics/licenses',\n      method: 'GET',\n    });\n  }\n}\n"],"file":"datasource.js"}