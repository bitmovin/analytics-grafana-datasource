{"version":3,"sources":["../src/datasource.js"],"names":["_","convertFilterValueToProperType","ATTRIBUTE","ATTRIBUTE_LIST","AD_ATTRIBUTE_LIST","METRICS_ATTRIBUTE_LIST","ORDERBY_ATTRIBUTES","getAsOptionsList","AGGREGATION","calculateAutoInterval","calculateAutoIntervalFromRange","QUERY_INTERVAL","transform","ResultFormat","getApiRequestUrl","baseUrl","isAdAnalytics","isMetric","BitmovinAnalyticsDatasource","instanceSettings","$q","backendSrv","templateSrv","type","url","jsonData","name","q","withCredentials","headers","apiKey","tenantOrgId","length","basicAuth","options","query","buildQueryParameters","targets","filter","t","hide","when","data","getAdhocFilters","adhocFilters","targetResponsePromises","map","target","resultFormat","TIME_SERIES","interval","HOUR","filters","e","key","operator","value","replace","scopedVars","orderBy","order","licenseKey","license","start","range","from","toISOString","end","to","includes","dimension","urlAppendix","metric","COUNT","LICENSE_KEY","percentileValue","intervalAutoLimit","AUTO","valueOf","intervalMs","intervalSnapTo","MONTH","startOf","DAY","MINUTE","groupBy","forEach","INTERVAL","Number","limit","undefined","apiRequestUrl","doRequest","method","resultTarget","alias","refId","Promise","all","then","targetResponses","result","response","series","getLicenses","status","message","title","resolve","datasourceRequest"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport { convertFilterValueToProperType, ATTRIBUTE, ATTRIBUTE_LIST, AD_ATTRIBUTE_LIST, METRICS_ATTRIBUTE_LIST, ORDERBY_ATTRIBUTES, getAsOptionsList } from './types/queryAttributes';\nimport { AGGREGATION } from './types/aggregations';\nimport { calculateAutoInterval, calculateAutoIntervalFromRange, QUERY_INTERVAL } from './types/intervals';\nimport { transform } from './result_transformer';\nimport { ResultFormat } from './types/resultFormat';\n\nconst getApiRequestUrl = (baseUrl, isAdAnalytics, isMetric) => {\n  if (isAdAnalytics === true) {\n    return baseUrl + '/analytics/ads/queries';\n  }\n  if (isMetric == true) {\n    return baseUrl + '/analytics/metrics';\n  }\n  return baseUrl + '/analytics/queries';\n};\n\nexport class BitmovinAnalyticsDatasource {\n\n  constructor(instanceSettings, $q, backendSrv, templateSrv) {\n    this.type = instanceSettings.type;\n    this.url = instanceSettings.url;\n    this.isAdAnalytics = instanceSettings.jsonData.isAdAnalytics;\n    this.name = instanceSettings.name;\n    this.q = $q;\n    this.backendSrv = backendSrv;\n    this.templateSrv = templateSrv;\n    this.withCredentials = instanceSettings.withCredentials;\n\n    this.headers = {\n      'Content-Type': 'application/json',\n      'X-Api-Key': instanceSettings.jsonData.apiKey,\n    };\n\n    const tenantOrgId = instanceSettings.jsonData.tenantOrgId;\n    if (typeof tenantOrgId === 'string' && tenantOrgId.length > 0) {\n      this.headers['X-Tenant-Org-Id'] = tenantOrgId;\n    }\n\n    if (typeof instanceSettings.basicAuth === 'string' && instanceSettings.basicAuth.length > 0) {\n      this.headers['Authorization'] = instanceSettings.basicAuth;\n    }\n  }\n\n  query(options) {\n    const query = this.buildQueryParameters(options);\n    query.targets = query.targets.filter(t => !t.hide);\n\n    if (query.targets.length <= 0) {\n      return this.q.when({ data: [] });\n    }\n\n    if (this.templateSrv.getAdhocFilters) {\n      query.adhocFilters = this.templateSrv.getAdhocFilters(this.name);\n    } else {\n      query.adhocFilters = [];\n    }\n\n    const targetResponsePromises = _.map(query.targets, target => {\n      target.resultFormat = target.resultFormat || ResultFormat.TIME_SERIES;\n      target.interval = target.interval || QUERY_INTERVAL.HOUR;\n\n      const filters = _.map([...target.filter, ...query.adhocFilters], e => {\n        let filter = {\n          name: (e.name) ? e.name : e.key,\n          operator: e.operator,\n          value: this.templateSrv.replace(e.value, options.scopedVars)\n        }\n        switch (filter.operator) {\n          case '=':\n            filter.operator = 'EQ';\n            break;\n          case '!=':\n            filter.operator = 'NE';\n            break;\n          case '<':\n            filter.operator = 'LT';\n            break;\n          case '>':\n            filter.operator = 'GT';\n            break;\n        }\n        return {\n          name: filter.name,\n          operator: filter.operator,\n          value: convertFilterValueToProperType(filter)\n        }\n      });\n      const orderBy = _.map(target.orderBy, e => ({ name: e.name, order: e.order }));\n      const data = {\n        licenseKey: target.license,\n        start: options.range.from.toISOString(),\n        end: options.range.to.toISOString(),\n        filters,\n        orderBy\n      };\n\n      let isMetric = METRICS_ATTRIBUTE_LIST.includes(target.dimension);\n      let urlAppendix = '';\n      \n      if (isMetric) {\n        urlAppendix = target.dimension;\n        data['metric'] = target.dimension\n      } else {\n        target.metric = target.metric || AGGREGATION.COUNT;\n        target.dimension = target.dimension || ATTRIBUTE.LICENSE_KEY;\n        urlAppendix = target.metric\n        data['dimension'] = target.dimension;\n    \n          if (target.metric === 'percentile') {\n            data['percentile'] = target.percentileValue;\n          }\n      }\n\n      if (target.resultFormat === ResultFormat.TIME_SERIES) {\n        if (target.intervalAutoLimit === true) {\n          data['interval'] = target.interval === QUERY_INTERVAL.AUTO ? calculateAutoIntervalFromRange(options.range.from.valueOf(), options.range.to.valueOf()) : target.interval;\n        }else{\n          data['interval'] = target.interval === QUERY_INTERVAL.AUTO ? calculateAutoInterval(options.intervalMs) : target.interval;\n        }\n        if (target.intervalSnapTo === true) {\n          switch (data['interval']) {\n            case QUERY_INTERVAL.MONTH:\n            data['start'] = options.range.from.startOf('month').toISOString();\n            data['end'] = options.range.to.startOf('month').toISOString();\n            break;\n            case QUERY_INTERVAL.DAY:\n            data['start'] = options.range.from.startOf('day').toISOString();\n            data['end'] = options.range.to.startOf('day').toISOString();\n            break;\n            case QUERY_INTERVAL.HOUR:\n            data['start'] = options.range.from.startOf('hour').toISOString();\n            data['end'] = options.range.to.startOf('hour').toISOString();\n            break;\n            case QUERY_INTERVAL.MINUTE:\n            data['start'] = options.range.from.startOf('minute').toISOString();\n            data['end'] = options.range.to.startOf('minute').toISOString();\n            break;\n          }\n        }\n      }\n      data['groupBy'] = target.groupBy;\n      data['orderBy'].forEach (e => {\n        if (e.name == ORDERBY_ATTRIBUTES.INTERVAL) {\n          e.name = data['interval'];\n        }\n      });\n      data['limit'] = Number(target.limit) || undefined;\n      var apiRequestUrl = getApiRequestUrl(this.url, this.isAdAnalytics, isMetric);\n\n      return this.doRequest({\n        url: apiRequestUrl + '/' + urlAppendix,\n        data: data,\n        method: 'POST',\n        resultTarget: target.alias || target.refId,\n        resultFormat: target.resultFormat\n      });\n    });\n\n    return Promise.all(targetResponsePromises).then(targetResponses => {\n      let result = [];\n      _.map(targetResponses, response => {\n        const series = transform(response, options);\n        result = [...result, ...series];\n      });\n      return {\n        data: result\n      };\n    });\n  }\n\n  testDatasource() {\n    return this.getLicenses().then(response => {\n      if (response.status === 200) {\n        return { status: \"success\", message: \"Data source is working\", title: \"Success\" };\n      }\n    });\n  }\n\n  annotationQuery(options) {\n\n  }\n\n  metricFindQuery(query) {\n\n  }\n\n  getTagKeys(options) {\n    if (this.isAdAnalytics)\n      return Promise.resolve(getAsOptionsList(AD_ATTRIBUTE_LIST));\n    return Promise.resolve(getAsOptionsList(ATTRIBUTE_LIST));\n  }\n\n  doRequest(options) {\n    options.withCredentials = this.withCredentials;\n    options.headers = this.headers;\n\n    return this.backendSrv.datasourceRequest(options);\n  }\n\n  buildQueryParameters(options) {\n    return options;\n  }\n\n  getLicenses() {\n    return this.doRequest({\n      url: this.url + '/analytics/licenses',\n      method: 'GET',\n    });\n  }\n}\n"],"file":"datasource.js"}