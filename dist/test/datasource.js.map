{"version":3,"sources":["../../src/datasource.js"],"names":["getApiRequestUrl","baseUrl","isAdAnalytics","isMetric","mapMathOperatorToAnalyticsFilterOperator","operator","OPERATOR","EQ","NE","LT","LTE","GT","GTE","BitmovinAnalyticsDatasource","instanceSettings","$q","backendSrv","templateSrv","type","url","jsonData","name","q","withCredentials","headers","apiKey","tenantOrgId","length","basicAuth","requestHandler","RequestHandler","licenseService","LicenseService","options","query","buildQueryParameters","targets","filter","t","hide","when","data","getAdhocFilters","adhocFilters","targetResponsePromises","_","map","target","resultFormat","ResultFormat","TIME_SERIES","interval","QUERY_INTERVAL","HOUR","filters","e","key","value","replace","scopedVars","orderBy","order","licenseKey","license","start","range","from","toISOString","end","to","METRICS_ATTRIBUTE_LIST","includes","dimension","urlAppendix","metric","AGGREGATION","COUNT","ATTRIBUTE","LICENSE_KEY","percentileValue","AUTO","intervalMs","valueOf","intervalSnapTo","intervalTimeUnit","startOf","groupBy","forEach","ORDERBY_ATTRIBUTES","INTERVAL","Number","limit","undefined","apiRequestUrl","requestOptions","method","resultTarget","alias","refId","doRequest","Promise","all","then","targetResponses","result","series","datapointsCnt","response","partialResult","error","generateWarningsForResult","status","message","title","resolve","AD_ATTRIBUTE_LIST","ATTRIBUTE_LIST","cancelled"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport { convertFilterValueToProperType, ATTRIBUTE, ATTRIBUTE_LIST, AD_ATTRIBUTE_LIST, METRICS_ATTRIBUTE_LIST, ORDERBY_ATTRIBUTES, getAsOptionsList } from './types/queryAttributes';\nimport { AGGREGATION } from './types/aggregations';\nimport { calculateAutoInterval, getMomentTimeUnitForQueryInterval, QUERY_INTERVAL } from './types/intervals';\nimport { transform } from './result_transformer';\nimport { ResultFormat } from './types/resultFormat';\nimport { OPERATOR } from './types/operators';\nimport LicenseService from './licenseService';\nimport RequestHandler from './requestHandler';\n\nconst getApiRequestUrl = (baseUrl, isAdAnalytics, isMetric) => {\n  if (isAdAnalytics === true) {\n    return baseUrl + '/analytics/ads/queries';\n  }\n  if (isMetric == true) {\n    return baseUrl + '/analytics/metrics';\n  }\n  return baseUrl + '/analytics/queries';\n};\n\nconst mapMathOperatorToAnalyticsFilterOperator = (operator) => {\n  switch (operator) {\n    case '=':\n      return OPERATOR.EQ;\n    case '!=':\n      return OPERATOR.NE;\n    case '<':\n      return OPERATOR.LT;\n    case '<=':\n      return OPERATOR.LTE;\n    case '>':\n      return OPERATOR.GT;\n    case '>=':\n      return OPERATOR.GTE;\n    default:\n      return operator;\n  }\n};\n\nexport class BitmovinAnalyticsDatasource {\n\n  constructor(instanceSettings, $q, backendSrv, templateSrv) {\n    this.type = instanceSettings.type;\n    this.url = instanceSettings.url;\n    this.isAdAnalytics = instanceSettings.jsonData.isAdAnalytics;\n    this.name = instanceSettings.name;\n    this.q = $q;\n    this.backendSrv = backendSrv;\n    this.templateSrv = templateSrv;\n    this.withCredentials = instanceSettings.withCredentials;\n\n    const headers = {\n      'Content-Type': 'application/json',\n      'X-Api-Key': instanceSettings.jsonData.apiKey,\n    };\n\n    const tenantOrgId = instanceSettings.jsonData.tenantOrgId;\n    if (typeof tenantOrgId === 'string' && tenantOrgId.length > 0) {\n      headers['X-Tenant-Org-Id'] = tenantOrgId;\n    }\n\n    if (typeof instanceSettings.basicAuth === 'string' && instanceSettings.basicAuth.length > 0) {\n      headers['Authorization'] = instanceSettings.basicAuth;\n    }\n\n    this.requestHandler = new RequestHandler(backendSrv, headers, instanceSettings.withCredentials)\n    this.licenseService = new LicenseService(this.requestHandler, instanceSettings.url);\n  }\n\n  query(options) {\n    const query = this.buildQueryParameters(options);\n    query.targets = query.targets.filter(t => !t.hide);\n\n    if (query.targets.length <= 0) {\n      return this.q.when({ data: [] });\n    }\n\n    if (this.templateSrv.getAdhocFilters) {\n      query.adhocFilters = this.templateSrv.getAdhocFilters(this.name);\n    } else {\n      query.adhocFilters = [];\n    }\n\n    const targetResponsePromises = _.map(query.targets, target => {\n      target.resultFormat = target.resultFormat || ResultFormat.TIME_SERIES;\n      target.interval = target.interval || QUERY_INTERVAL.HOUR;\n\n      const filters = _.map([...target.filter, ...query.adhocFilters], e => {\n        let filter = {\n          name: (e.name) ? e.name : e.key,\n          operator: mapMathOperatorToAnalyticsFilterOperator(e.operator),\n          value: this.templateSrv.replace(e.value, options.scopedVars)\n        }\n        return {\n          name: filter.name,\n          operator: filter.operator,\n          value: convertFilterValueToProperType(filter)\n        }\n      });\n      const orderBy = _.map(target.orderBy, e => ({ name: e.name, order: e.order }));\n      const data = {\n        licenseKey: target.license,\n        start: options.range.from.toISOString(),\n        end: options.range.to.toISOString(),\n        filters,\n        orderBy\n      };\n\n      let isMetric = METRICS_ATTRIBUTE_LIST.includes(target.dimension);\n      let urlAppendix = '';\n\n      if (isMetric) {\n        urlAppendix = target.dimension;\n        data['metric'] = target.dimension\n      } else {\n        target.metric = target.metric || AGGREGATION.COUNT;\n        target.dimension = target.dimension || ATTRIBUTE.LICENSE_KEY;\n        urlAppendix = target.metric\n        data['dimension'] = target.dimension;\n\n        if (target.metric === 'percentile') {\n          data['percentile'] = target.percentileValue;\n        }\n      }\n\n      if (target.resultFormat === ResultFormat.TIME_SERIES) {\n        data['interval'] = target.interval;\n        if (target.interval === QUERY_INTERVAL.AUTO) {\n          const intervalMs = options.range.to.valueOf() - options.range.from.valueOf();\n          data['interval'] = calculateAutoInterval(intervalMs);\n        }\n\n        if (target.intervalSnapTo === true) {\n          const intervalTimeUnit = getMomentTimeUnitForQueryInterval(data['interval']);\n          if (intervalTimeUnit != null) {\n            data['start'] = options.range.from.startOf(intervalTimeUnit).toISOString();\n            data['end'] = options.range.to.startOf(intervalTimeUnit).toISOString();\n          }\n        }\n      }\n      data['groupBy'] = target.groupBy;\n      data['orderBy'].forEach(e => {\n        if (e.name == ORDERBY_ATTRIBUTES.INTERVAL) {\n          e.name = data['interval'];\n        }\n      });\n      data['limit'] = Number(target.limit) || undefined;\n      var apiRequestUrl = getApiRequestUrl(this.url, this.isAdAnalytics, isMetric);\n\n      const requestOptions = {\n        url: apiRequestUrl + '/' + urlAppendix,\n        data: data,\n        method: 'POST',\n        resultTarget: target.alias || target.refId,\n        resultFormat: target.resultFormat\n      };\n      return this.requestHandler.doRequest(requestOptions);\n    });\n\n    return Promise.all(targetResponsePromises).then(targetResponses => {\n      let result = {\n        series: [],\n        datapointsCnt: 0\n      };\n      _.map(targetResponses, response => {\n        const partialResult = transform(response, options);\n        result.series = [...result.series, ...partialResult.series];\n        result.datapointsCnt += partialResult.datapointsCnt\n      });\n      return {\n        data: result.series,\n        error: this.generateWarningsForResult(result)\n      };\n    });\n  }\n\n  testDatasource() {\n    const requestOptions = {\n      url: this.url + '/analytics/licenses',\n      method: 'GET',\n    };\n    return this.requestHandler.doRequest(requestOptions).then(response => {\n      if (response.status === 200) {\n        return { status: \"success\", message: \"Data source is working\", title: \"Success\" };\n      }\n      return { status: \"error\", message: \"Data source is not working\", title: \"Error\" };\n    });\n  }\n\n  annotationQuery(options) {\n\n  }\n\n  metricFindQuery(query) {\n\n  }\n\n  getTagKeys(options) {\n    if (this.isAdAnalytics) {\n      return Promise.resolve(getAsOptionsList(AD_ATTRIBUTE_LIST));\n    }\n    return Promise.resolve(getAsOptionsList(ATTRIBUTE_LIST));\n  }\n\n  buildQueryParameters(options) {\n    return options;\n  }\n\n  // returns DataQueryError https://github.com/grafana/grafana/blob/08bf2a54523526a7f59f7c6a8dafaace79ab87db/packages/grafana-data/src/types/datasource.ts#L400\n  generateWarningsForResult(result) {\n    if (result.datapointsCnt == 200) {\n      return {\n        cancelled: false,\n        message: \"Your request reached the max row limit of the API. You might see incomplete data. This problem might be caused by the use of high cardinality columns in group by, too small interval or too big of a time range.\",\n        status: \"WARNING\"\n      }\n    }\n\n    return null\n  }\n}\n"],"file":"datasource.js"}