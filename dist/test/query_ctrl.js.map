{"version":3,"sources":["../../src/query_ctrl.js"],"names":["REMOVE_ITEM_TEXT","DEFAULT_LICENSE","licenseKey","label","DEFAULT_OPERATOR","OPERATOR","EQ","GROUPBY_DEFAULT_ORDER","ORDERBY","ASC","BitmovinAnalyticsDatasourceQueryCtrl","$scope","$injector","templateSrv","$q","uiSegmentSrv","scope","metrics","AGGREGATION_LIST","fields","ATTRIBUTE_LIST","groupByFields","GROUP_BY_ATTRIBUTE_LIST","orderByFields","ORDERBY_ATTRIBUTES_LIST","datasource","isAdAnalytics","AD_ATTRIBUTE_LIST","GROUP_BY_AD_ATTRIBUTE_LIST","ORDERBY_AD_ATTRIBUTES_LIST","licenses","resultFormats","ResultFormat","TIME_SERIES","TABLE","intervals","QUERY_INTERVAL_LIST","filterSegment","newPlusButton","groupBySegment","orderBySegment","groupByParts","target","groupBy","map","e","createGroupByPartsEntry","orderBySegments","orderBy","createOrderBySegment","filterSegments","filter","f","createFilterSegment","metric","percentileValue","dimension","license","resultFormat","interval","QUERY_INTERVAL","HOUR","alias","limit","lastQueryError","getLicenses","then","response","status","data","result","items","item","name","push","find","l","panelCtrl","events","on","onDataReceived","bind","onDataError","dataList","err","handleQueryCtrlError","config","resultTarget","refId","error","message","refresh","options","Promise","resolve","unshift","value","text","OPERATOR_LIST","segment","$index","ORDERBY_LIST","groupByValue","params","def","type","optional","plusButton","html","operator","filterValue","order","newFilter","createFilter","newOrderBy","createOrderBy","selectParts","part","evt","splice","when","METRICS_ATTRIBUTE_LIST","includes","QueryCtrl","templateUrl"],"mappings":"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","sourcesContent":["import { QueryCtrl } from 'app/plugins/sdk';\nimport './css/query-editor.css!'\n\nimport _ from 'lodash';\nimport { ATTRIBUTE_LIST, convertFilterValueToProperType, getAsOptionsList, ORDERBY_ATTRIBUTES_LIST, AD_ATTRIBUTE_LIST, ORDERBY_AD_ATTRIBUTES_LIST, METRICS_ATTRIBUTE_LIST } from './types/queryAttributes';\nimport { OPERATOR_LIST, OPERATOR, ORDERBY_LIST, ORDERBY } from './types/operators';\nimport { QUERY_INTERVAL, QUERY_INTERVAL_LIST } from './types/intervals';\nimport { AGGREGATION_LIST } from './types/aggregations';\nimport { ResultFormat } from './types/resultFormat';\nimport { GROUP_BY_ATTRIBUTE_LIST, GROUP_BY_AD_ATTRIBUTE_LIST } from './types/queryGrouByAttributes';\n\nconst REMOVE_ITEM_TEXT = '-- Remove --';\nconst DEFAULT_LICENSE = { licenseKey: '<YOUR LICENSE KEY>', label: '-- Select License --' };\nconst DEFAULT_OPERATOR = OPERATOR.EQ;\nconst GROUPBY_DEFAULT_ORDER = ORDERBY.ASC;\n\nexport class BitmovinAnalyticsDatasourceQueryCtrl extends QueryCtrl {\n\n  constructor($scope, $injector, templateSrv, $q, uiSegmentSrv) {\n    super($scope, $injector);\n\n    this.scope = $scope;\n    this.$q = $q;\n    this.uiSegmentSrv = uiSegmentSrv;\n\n    this.metrics = AGGREGATION_LIST;\n    this.fields = ATTRIBUTE_LIST;\n    this.groupByFields = GROUP_BY_ATTRIBUTE_LIST;\n    this.orderByFields = ORDERBY_ATTRIBUTES_LIST;\n    if (this.datasource.isAdAnalytics === true) {\n      this.fields = AD_ATTRIBUTE_LIST;\n      this.groupByFields = GROUP_BY_AD_ATTRIBUTE_LIST;\n      this.orderByFields = ORDERBY_AD_ATTRIBUTES_LIST;\n    }\n    this.licenses = [];\n    this.resultFormats = [ResultFormat.TIME_SERIES, ResultFormat.TABLE];\n    this.intervals = QUERY_INTERVAL_LIST;\n    this.filterSegment = this.uiSegmentSrv.newPlusButton();\n    this.groupBySegment = this.uiSegmentSrv.newPlusButton();\n    this.orderBySegment = this.uiSegmentSrv.newPlusButton();\n    this.groupByParts = this.target.groupBy ? this.target.groupBy.map(e => this.createGroupByPartsEntry(e)) : [];\n    this.orderBySegments = this.target.orderBy ? this.target.orderBy.map(e => this.createOrderBySegment(e)) : [];\n    this.filterSegments = this.target.filter ? this.target.filter.map(f => this.createFilterSegment(f)) : [];\n\n    this.target.metric = this.target.metric || this.metrics[0];\n    this.target.percentileValue = this.target.percentileValue || 95;\n    this.target.dimension = this.target.dimension || this.fields[0];\n    this.target.license = this.target.license || this.licenses[0];\n    this.target.resultFormat = this.target.resultFormat || this.resultFormats[0];\n    this.target.interval = this.target.interval || QUERY_INTERVAL.HOUR;\n    this.target.alias = this.target.alias || '';\n    this.target.groupBy = this.target.groupBy || [];\n    this.target.orderBy = this.target.orderBy || [];\n    this.target.filter = this.target.filter || [];\n    this.target.limit = this.target.limit;\n    this.lastQueryError = [];\n\n    this.datasource.getLicenses().then(response => {\n      if (response.status === 200) {\n        this.licenses = [DEFAULT_LICENSE];\n\n        for (var item of response.data.data.result.items) {\n          item['label'] = item.name ? item.name : item.licenseKey;\n          this.licenses.push(item);\n        }\n\n        if (!this.target.license || !this.licenses.find(l => l.licenseKey === this.target.license)) {\n          this.target.license = DEFAULT_LICENSE.licenseKey;\n        }\n      }\n    });\n\n    this.panelCtrl.events.on('data-received', this.onDataReceived.bind(this), $scope);\n    this.panelCtrl.events.on('data-error', this.onDataError.bind(this), $scope);\n  }\n\n  onDataReceived(dataList) {\n    this.lastQueryError = [];\n  }\n\n  onDataError(err) {\n    this.handleQueryCtrlError(err);\n  }\n\n  handleQueryCtrlError(err) {\n    if (err.config && err.config.data && err.config.resultTarget !== this.target.refId && err.config.resultTarget !== this.target.alias) {\n      return;\n    }\n\n    if (err.error && err.error.data && err.error.data.error) {\n      this.lastQueryError[this.target.refId] = err.error.data.error.message;\n    } else if (err.error && err.error.data) {\n      this.lastQueryError[this.target.refId] = err.error.data.message;\n    } else if (err.data && err.data.error) {\n      this.lastQueryError[this.target.refId] = err.data.error.message;\n    } else if (err.data && err.data.message) {\n      this.lastQueryError[this.target.refId] = err.data.message;\n    } else {\n      this.lastQueryError[this.target.refId] = err;\n    }\n  }\n\n  onChangeInternal() {\n    this.panelCtrl.refresh(); // Asks the panel to refresh data.\n  }\n\n  getGroupByOptions() {\n    let options = getAsOptionsList(this.groupByFields);\n    return Promise.resolve(options);\n  }\n\n  getFilterOptions() {\n    let options = getAsOptionsList(this.fields);\n    return Promise.resolve(options);\n  }\n\n  getFilterSegmentOptions() {\n    var options = getAsOptionsList(this.fields);\n\n    options.unshift({\n      value: REMOVE_ITEM_TEXT,\n      text: REMOVE_ITEM_TEXT\n    })\n\n    return Promise.resolve(options);\n  }\n\n  getFilterOperatorOptions() {\n    let options = getAsOptionsList(OPERATOR_LIST);\n    return Promise.resolve(options);\n  }\n\n  getFilterValueOptions(segment, $index) {\n    return Promise.resolve([]);\n  }\n\n  getOrderByDimensionOptions() {\n    var options = getAsOptionsList(this.orderByFields);\n\n    options.unshift({\n      value: REMOVE_ITEM_TEXT,\n      text: REMOVE_ITEM_TEXT\n    })\n\n    return Promise.resolve(options);\n  }\n\n  getOrderByOperatorOptions() {\n    let options = getAsOptionsList(ORDERBY_LIST);\n    return Promise.resolve(options);\n  }\n\n  createGroupByPartsEntry(groupByValue) {\n    return {\n      params: [groupByValue],\n      def: {\n        type: 'dimension',\n        params: [{\n          optional: false\n        }]\n      }\n    }\n  }\n\n  groupByAction() {\n    this.target.groupBy.push(this.groupBySegment.value);\n\n    this.groupByParts.push(this.createGroupByPartsEntry(this.groupBySegment.value));\n\n    const plusButton = this.uiSegmentSrv.newPlusButton();\n    this.groupBySegment.value = plusButton.value;\n    this.groupBySegment.html = plusButton.html;\n    this.panelCtrl.refresh();\n  }\n\n  createFilter(name, operator, value = null) {\n    const filter = { name, operator: operator || DEFAULT_OPERATOR, value };\n    filter.value = convertFilterValueToProperType(filter)\n    return filter;\n  }\n\n  createFilterSegment(filter) {\n    return { html: filter.name, operator: { html: filter.operator || DEFAULT_OPERATOR }, filterValue: { html: filter.value || 'set filter value' } };\n  }\n\n  createOrderBy(name, order) {\n    return { name, order: order || GROUPBY_DEFAULT_ORDER };\n  }\n\n  createOrderBySegment(orderBy) {\n    return { html: orderBy.name, order: { html: orderBy.order || GROUPBY_DEFAULT_ORDER } };\n  }\n\n  filterAction() {\n    const filter = this.target.filter.find(f => f.name === this.filterSegment.name);\n    if (!filter) {\n      const newFilter = this.createFilter(this.filterSegment.value)\n      this.target.filter.push(newFilter);\n\n      this.filterSegments.push(this.createFilterSegment(newFilter));\n    }\n\n    const plusButton = this.uiSegmentSrv.newPlusButton();\n    this.filterSegment.value = plusButton.value;\n    this.filterSegment.html = plusButton.html;\n    this.panelCtrl.refresh();\n  }\n\n  orderByAction() {\n    const orderBy = this.target.orderBy.find(e => e.name === this.orderBySegment.name);\n    if (!orderBy) {\n      const newOrderBy = this.createOrderBy(this.orderBySegment.value)\n      this.target.orderBy.push(newOrderBy);\n\n      this.orderBySegments.push(this.createOrderBySegment(newOrderBy));\n    }\n\n    const plusButton = this.uiSegmentSrv.newPlusButton();\n    this.orderBySegment.value = plusButton.value;\n    this.orderBySegment.html = plusButton.html;\n    this.panelCtrl.refresh();\n  }\n\n  handleGroupByPartEvent(selectParts, part, evt) {\n    switch (evt.name) {\n      case 'action': {\n        this.target.groupBy.splice(part, 1);\n        this.groupByParts.splice(part, 1);\n        this.panelCtrl.refresh();\n        break;\n      }\n      case 'get-part-actions': {\n        return this.$q.when([{ text: 'Remove', value: 'remove-part' }]);\n      }\n    }\n  }\n\n  filterSegmentUpdate(segment, $index) {\n    if (segment.value === REMOVE_ITEM_TEXT) {\n      this.target.filter.splice($index, 1);\n      this.filterSegments.splice($index, 1);\n    } else {\n      this.target.filter[$index].name = segment.value;\n    }\n\n    this.panelCtrl.refresh();\n  }\n\n  filterOperatorSegmentUpdate(segment, $index) {\n    this.target.filter[$index].operator = segment.operator.value;\n    this.panelCtrl.refresh();\n  }\n\n  filterValueSegmentUpdate(segment, $index) {\n    this.target.filter[$index].value = segment.filterValue.value;\n    this.panelCtrl.refresh();\n  }\n\n  orderByDimensionSegmentUpdate(segment, $index) {\n    if (segment.value === REMOVE_ITEM_TEXT) {\n      this.target.orderBy.splice($index, 1);\n      this.orderBySegments.splice($index, 1);\n    } else {\n      this.target.orderBy[$index].name = segment.value;\n    }\n\n    this.panelCtrl.refresh();\n  }\n\n  orderByOrderSegmentUpdate(segment, $index) {\n    this.target.orderBy[$index].order = segment.order.value;\n    this.panelCtrl.refresh();\n  }\n\n  isDimensionAMetric(dimension) {\n    return METRICS_ATTRIBUTE_LIST.includes(dimension)\n  }\n}\n\nBitmovinAnalyticsDatasourceQueryCtrl.templateUrl = 'partials/query.editor.html';\n\n"],"file":"query_ctrl.js"}