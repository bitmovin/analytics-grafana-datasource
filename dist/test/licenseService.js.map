{"version":3,"sources":["../../src/licenseService.js"],"names":["LicenseService","requestHandler","baseURL","endpoint","mapperFunction","requestOptions","url","method","doRequest","licensesResponse","status","licenses","data","result","items","item","license","push","allLicenses","licenseEndpoints","mapperFunc","name","licenseKey","id","_fetchLicensesForEndpoint","concat"],"mappings":";;;;;;;;;;;;;;;;;;;;;IAAMA,c;;;AAEJ,0BAAYC,cAAZ,EAA4BC,OAA5B,EAAqC;AAAA;;AACnC,SAAKD,cAAL,GAAsBA,cAAtB;AACA,SAAKC,OAAL,GAAeA,OAAf;AACD;;;;;;;+CAE+BC,Q,EAAUC,c;;;;;;;AAClCC,gBAAAA,c,GAAiB;AACrBC,kBAAAA,GAAG,EAAE,KAAKJ,OAAL,GAAeC,QADC;AAErBI,kBAAAA,MAAM,EAAE;AAFa,iB;;uBAKQ,KAAKN,cAAL,CAAoBO,SAApB,CAA8BH,cAA9B,C;;;AAAzBI,gBAAAA,gB;;sBAEFA,gBAAgB,CAACC,MAAjB,KAA4B,G;;;;;iDACvB,E;;;AAGHC,gBAAAA,Q,GAAW,E;;;;;;AACjB,iCAAmBF,gBAAgB,CAACG,IAAjB,CAAsBA,IAAtB,CAA2BC,MAA3B,CAAkCC,KAArD,uHAA4D;AAAjDC,kBAAAA,IAAiD;AACpDC,kBAAAA,OADoD,GAC1CZ,cAAc,CAACW,IAAD,CAD4B;AAE1DJ,kBAAAA,QAAQ,CAACM,IAAT,CAAcD,OAAd;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;iDACML,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIHO,gBAAAA,W,GAAc,E;AAEZC,gBAAAA,gB,GAAmB,CACvB;AACEhB,kBAAAA,QAAQ,EAAE,qBADZ;AAEEiB,kBAAAA,UAAU,EAAE,oBAACL,IAAD;AAAA,6CACPA,IADO;AAEV,+BAASA,IAAI,CAACM,IAAL,GAAYN,IAAI,CAACM,IAAjB,GAAwBN,IAAI,CAACO;AAF5B;AAAA;AAFd,iBADuB,EAQvB;AACEnB,kBAAAA,QAAQ,EAAE,6BADZ;AAEEiB,kBAAAA,UAAU,EAAE,oBAACL,IAAD;AAAA,6CACPA,IADO;AAEV,oCAAcA,IAAI,CAACQ,EAFT;AAGV,+BAASR,IAAI,CAACM,IAAL,GAAYN,IAAI,CAACM,IAAjB,GAAwBN,IAAI,CAACQ;AAH5B;AAAA;AAFd,iBARuB,C;4CAiBNJ,gB;;;;;;;;AAARJ,gBAAAA,I;;;uBAEgB,KAAKS,yBAAL,CAA+BT,IAAI,CAACZ,QAApC,EAA8CY,IAAI,CAACK,UAAnD,C;;;AAAjBT,gBAAAA,Q;AACNO,gBAAAA,WAAW,GAAGA,WAAW,CAACO,MAAZ,CAAmBd,QAAnB,CAAd;;;;;;;;;;;;;;kDAKGO,W;;;;;;;;;;;;;;;;;;;;;AAEV;eAEclB,c","sourcesContent":["class LicenseService {\n\n  constructor(requestHandler, baseURL) {\n    this.requestHandler = requestHandler;\n    this.baseURL = baseURL;\n  }\n\n  async _fetchLicensesForEndpoint(endpoint, mapperFunction) {\n    const requestOptions = {\n      url: this.baseURL + endpoint,\n      method: 'GET',\n    };\n\n    const licensesResponse = await this.requestHandler.doRequest(requestOptions);\n\n    if (licensesResponse.status !== 200) {\n      return [];\n    }\n\n    const licenses = [];\n    for (const item of licensesResponse.data.data.result.items) {\n      const license = mapperFunction(item);\n      licenses.push(license);\n    }\n    return licenses;\n  }\n\n  async fetchLicenses() {\n    let allLicenses = [];\n\n    const licenseEndpoints = [\n      {\n        endpoint: '/analytics/licenses',\n        mapperFunc: (item) => ({\n          ...item,\n          'label': item.name ? item.name : item.licenseKey\n        }),\n      },\n      {\n        endpoint: '/analytics/virtual-licenses',\n        mapperFunc: (item) => ({\n          ...item,\n          'licenseKey': item.id,\n          'label': item.name ? item.name : item.id\n        }),\n      },\n    ];\n    for (const item of licenseEndpoints) {\n      try {\n        const licenses = await this._fetchLicensesForEndpoint(item.endpoint, item.mapperFunc);\n        allLicenses = allLicenses.concat(licenses);\n      } catch (e) {\n        // ignore error\n      }\n    }\n    return allLicenses;\n  }\n};\n\nexport default LicenseService;\n"],"file":"licenseService.js"}