{"version":3,"sources":["../src/query_ctrl.js"],"names":["QueryCtrl","_","ATTRIBUTE_LIST","convertFilterValueToProperType","getAsOptionsList","ORDERBY_ATTRIBUTES_LIST","AD_ATTRIBUTE_LIST","ORDERBY_AD_ATTRIBUTES_LIST","METRICS_ATTRIBUTE_LIST","OPERATOR_LIST","OPERATOR","ORDERBY_LIST","ORDERBY","QUERY_INTERVAL","QUERY_INTERVAL_LIST","AGGREGATION_LIST","ResultFormat","GROUP_BY_ATTRIBUTE_LIST","GROUP_BY_AD_ATTRIBUTE_LIST","REMOVE_ITEM_TEXT","DEFAULT_LICENSE","licenseKey","label","DEFAULT_OPERATOR","EQ","GROUPBY_DEFAULT_ORDER","ASC","BitmovinAnalyticsDatasourceQueryCtrl","$scope","$injector","templateSrv","$q","uiSegmentSrv","scope","metrics","fields","groupByFields","orderByFields","datasource","isAdAnalytics","licenses","resultFormats","TIME_SERIES","TABLE","intervals","filterSegment","newPlusButton","groupBySegment","orderBySegment","groupByParts","target","groupBy","map","e","createGroupByPartsEntry","orderBySegments","orderBy","createOrderBySegment","filterSegments","filter","f","createFilterSegment","metric","percentileValue","dimension","license","resultFormat","interval","AUTO","alias","limit","lastQueryError","licenseService","fetchLicenses","then","concat","find","l","panelCtrl","events","on","onDataReceived","bind","onDataError","dataList","err","handleQueryCtrlError","config","data","resultTarget","refId","error","message","refresh","options","Promise","resolve","unshift","value","text","segment","$index","groupByValue","params","def","type","optional","push","plusButton","html","name","operator","filterValue","order","newFilter","createFilter","newOrderBy","createOrderBy","selectParts","part","evt","splice","when","includes","templateUrl"],"mappings":"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","sourcesContent":["import { QueryCtrl } from 'app/plugins/sdk';\nimport './css/query-editor.css!'\n\nimport _ from 'lodash';\nimport { ATTRIBUTE_LIST, convertFilterValueToProperType, getAsOptionsList, ORDERBY_ATTRIBUTES_LIST, AD_ATTRIBUTE_LIST, ORDERBY_AD_ATTRIBUTES_LIST, METRICS_ATTRIBUTE_LIST } from './types/queryAttributes';\nimport { OPERATOR_LIST, OPERATOR, ORDERBY_LIST, ORDERBY } from './types/operators';\nimport { QUERY_INTERVAL, QUERY_INTERVAL_LIST } from './types/intervals';\nimport { AGGREGATION_LIST } from './types/aggregations';\nimport { ResultFormat } from './types/resultFormat';\nimport { GROUP_BY_ATTRIBUTE_LIST, GROUP_BY_AD_ATTRIBUTE_LIST } from './types/queryGrouByAttributes';\n\nconst REMOVE_ITEM_TEXT = '-- Remove --';\nconst DEFAULT_LICENSE = { licenseKey: '<YOUR LICENSE KEY>', label: '-- Select License --' };\nconst DEFAULT_OPERATOR = OPERATOR.EQ;\nconst GROUPBY_DEFAULT_ORDER = ORDERBY.ASC;\n\nexport class BitmovinAnalyticsDatasourceQueryCtrl extends QueryCtrl {\n\n  constructor($scope, $injector, templateSrv, $q, uiSegmentSrv) {\n    super($scope, $injector);\n\n    this.scope = $scope;\n    this.$q = $q;\n    this.uiSegmentSrv = uiSegmentSrv;\n\n    this.metrics = AGGREGATION_LIST;\n    this.fields = ATTRIBUTE_LIST;\n    this.groupByFields = GROUP_BY_ATTRIBUTE_LIST;\n    this.orderByFields = ORDERBY_ATTRIBUTES_LIST;\n    if (this.datasource.isAdAnalytics === true) {\n      this.fields = AD_ATTRIBUTE_LIST;\n      this.groupByFields = GROUP_BY_AD_ATTRIBUTE_LIST;\n      this.orderByFields = ORDERBY_AD_ATTRIBUTES_LIST;\n    }\n    this.licenses = [];\n    this.resultFormats = [ResultFormat.TIME_SERIES, ResultFormat.TABLE];\n    this.intervals = QUERY_INTERVAL_LIST;\n    this.filterSegment = this.uiSegmentSrv.newPlusButton();\n    this.groupBySegment = this.uiSegmentSrv.newPlusButton();\n    this.orderBySegment = this.uiSegmentSrv.newPlusButton();\n    this.groupByParts = this.target.groupBy ? this.target.groupBy.map(e => this.createGroupByPartsEntry(e)) : [];\n    this.orderBySegments = this.target.orderBy ? this.target.orderBy.map(e => this.createOrderBySegment(e)) : [];\n    this.filterSegments = this.target.filter ? this.target.filter.map(f => this.createFilterSegment(f)) : [];\n\n    this.target.metric = this.target.metric || this.metrics[0];\n    this.target.percentileValue = this.target.percentileValue || 95;\n    this.target.dimension = this.target.dimension || this.fields[0];\n    this.target.license = this.target.license || this.licenses[0];\n    this.target.resultFormat = this.target.resultFormat || this.resultFormats[0];\n    this.target.interval = this.target.interval || QUERY_INTERVAL.AUTO;\n    this.target.alias = this.target.alias || '';\n    this.target.groupBy = this.target.groupBy || [];\n    this.target.orderBy = this.target.orderBy || [];\n    this.target.filter = this.target.filter || [];\n    this.target.limit = this.target.limit;\n    this.lastQueryError = [];\n\n    this.datasource.licenseService.fetchLicenses().then(licenses => {\n      this.licenses = [DEFAULT_LICENSE].concat(licenses);\n\n      if (!this.target.license || !this.licenses.find(l => l.licenseKey === this.target.license)) {\n        this.target.license = DEFAULT_LICENSE.licenseKey;\n      }\n    });\n\n    this.panelCtrl.events.on('data-received', this.onDataReceived.bind(this), $scope);\n    this.panelCtrl.events.on('data-error', this.onDataError.bind(this), $scope);\n  }\n\n  onDataReceived(dataList) {\n    this.lastQueryError = [];\n  }\n\n  onDataError(err) {\n    this.handleQueryCtrlError(err);\n  }\n\n  handleQueryCtrlError(err) {\n    if (err.config && err.config.data && err.config.resultTarget !== this.target.refId && err.config.resultTarget !== this.target.alias) {\n      return;\n    }\n\n    if (err.error && err.error.data && err.error.data.error) {\n      this.lastQueryError[this.target.refId] = err.error.data.error.message;\n    } else if (err.error && err.error.data) {\n      this.lastQueryError[this.target.refId] = err.error.data.message;\n    } else if (err.data && err.data.error) {\n      this.lastQueryError[this.target.refId] = err.data.error.message;\n    } else if (err.data && err.data.message) {\n      this.lastQueryError[this.target.refId] = err.data.message;\n    } else {\n      this.lastQueryError[this.target.refId] = err;\n    }\n  }\n\n  onChangeInternal() {\n    this.panelCtrl.refresh(); // Asks the panel to refresh data.\n  }\n\n  getGroupByOptions() {\n    let options = getAsOptionsList(this.groupByFields);\n    return Promise.resolve(options);\n  }\n\n  getFilterOptions() {\n    let options = getAsOptionsList(this.fields);\n    return Promise.resolve(options);\n  }\n\n  getFilterSegmentOptions() {\n    var options = getAsOptionsList(this.fields);\n\n    options.unshift({\n      value: REMOVE_ITEM_TEXT,\n      text: REMOVE_ITEM_TEXT\n    })\n\n    return Promise.resolve(options);\n  }\n\n  getFilterOperatorOptions() {\n    let options = getAsOptionsList(OPERATOR_LIST);\n    return Promise.resolve(options);\n  }\n\n  getFilterValueOptions(segment, $index) {\n    return Promise.resolve([]);\n  }\n\n  getOrderByDimensionOptions() {\n    var options = getAsOptionsList(this.orderByFields);\n\n    options.unshift({\n      value: REMOVE_ITEM_TEXT,\n      text: REMOVE_ITEM_TEXT\n    })\n\n    return Promise.resolve(options);\n  }\n\n  getOrderByOperatorOptions() {\n    let options = getAsOptionsList(ORDERBY_LIST);\n    return Promise.resolve(options);\n  }\n\n  createGroupByPartsEntry(groupByValue) {\n    return {\n      params: [groupByValue],\n      def: {\n        type: 'dimension',\n        params: [{\n          optional: false\n        }]\n      }\n    }\n  }\n\n  groupByAction() {\n    this.target.groupBy.push(this.groupBySegment.value);\n\n    this.groupByParts.push(this.createGroupByPartsEntry(this.groupBySegment.value));\n\n    const plusButton = this.uiSegmentSrv.newPlusButton();\n    this.groupBySegment.value = plusButton.value;\n    this.groupBySegment.html = plusButton.html;\n    this.panelCtrl.refresh();\n  }\n\n  createFilter(name, operator, value = null) {\n    const filter = { name, operator: operator || DEFAULT_OPERATOR, value };\n    filter.value = convertFilterValueToProperType(filter)\n    return filter;\n  }\n\n  createFilterSegment(filter) {\n    return { html: filter.name, operator: { html: filter.operator || DEFAULT_OPERATOR }, filterValue: { html: filter.value || 'set filter value' } };\n  }\n\n  createOrderBy(name, order) {\n    return { name, order: order || GROUPBY_DEFAULT_ORDER };\n  }\n\n  createOrderBySegment(orderBy) {\n    return { html: orderBy.name, order: { html: orderBy.order || GROUPBY_DEFAULT_ORDER } };\n  }\n\n  filterAction() {\n    const filter = this.target.filter.find(f => f.name === this.filterSegment.name);\n    if (!filter) {\n      const newFilter = this.createFilter(this.filterSegment.value)\n      this.target.filter.push(newFilter);\n\n      this.filterSegments.push(this.createFilterSegment(newFilter));\n    }\n\n    const plusButton = this.uiSegmentSrv.newPlusButton();\n    this.filterSegment.value = plusButton.value;\n    this.filterSegment.html = plusButton.html;\n    this.panelCtrl.refresh();\n  }\n\n  orderByAction() {\n    const orderBy = this.target.orderBy.find(e => e.name === this.orderBySegment.name);\n    if (!orderBy) {\n      const newOrderBy = this.createOrderBy(this.orderBySegment.value)\n      this.target.orderBy.push(newOrderBy);\n\n      this.orderBySegments.push(this.createOrderBySegment(newOrderBy));\n    }\n\n    const plusButton = this.uiSegmentSrv.newPlusButton();\n    this.orderBySegment.value = plusButton.value;\n    this.orderBySegment.html = plusButton.html;\n    this.panelCtrl.refresh();\n  }\n\n  handleGroupByPartEvent(selectParts, part, evt) {\n    switch (evt.name) {\n      case 'action': {\n        this.target.groupBy.splice(part, 1);\n        this.groupByParts.splice(part, 1);\n        this.panelCtrl.refresh();\n        break;\n      }\n      case 'get-part-actions': {\n        return this.$q.when([{ text: 'Remove', value: 'remove-part' }]);\n      }\n    }\n  }\n\n  filterSegmentUpdate(segment, $index) {\n    if (segment.value === REMOVE_ITEM_TEXT) {\n      this.target.filter.splice($index, 1);\n      this.filterSegments.splice($index, 1);\n    } else {\n      this.target.filter[$index].name = segment.value;\n    }\n\n    this.panelCtrl.refresh();\n  }\n\n  filterOperatorSegmentUpdate(segment, $index) {\n    this.target.filter[$index].operator = segment.operator.value;\n    this.panelCtrl.refresh();\n  }\n\n  filterValueSegmentUpdate(segment, $index) {\n    this.target.filter[$index].value = segment.filterValue.value;\n    this.panelCtrl.refresh();\n  }\n\n  orderByDimensionSegmentUpdate(segment, $index) {\n    if (segment.value === REMOVE_ITEM_TEXT) {\n      this.target.orderBy.splice($index, 1);\n      this.orderBySegments.splice($index, 1);\n    } else {\n      this.target.orderBy[$index].name = segment.value;\n    }\n\n    this.panelCtrl.refresh();\n  }\n\n  orderByOrderSegmentUpdate(segment, $index) {\n    this.target.orderBy[$index].order = segment.order.value;\n    this.panelCtrl.refresh();\n  }\n\n  isDimensionAMetric(dimension) {\n    return METRICS_ATTRIBUTE_LIST.includes(dimension)\n  }\n}\n\nBitmovinAnalyticsDatasourceQueryCtrl.templateUrl = 'partials/query.editor.html';\n\n"],"file":"query_ctrl.js"}